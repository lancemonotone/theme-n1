{"version":3,"file":"index.js","sources":["../../src/js/smoothscroll.js"],"sourcesContent":["/*\r\n * Smooth scroll to anchors, vanilla JS, back button support\r\n */\r\n// Call the smoothScroll function to execute it immediately when the module is loaded\r\nsmoothScroll();\r\n\r\n// same code as above but with the comments ABOVE the lines instead of next to them\r\nfunction smoothScroll() {\r\n  const links = document.querySelectorAll('a[href^=\"#\"]');\r\n\r\n  for (const link of links) {\r\n    addScrollTo(link);\r\n  }\r\n}\r\n\r\nfunction addScrollTo(link) {\r\n  link.addEventListener('click', (event) => {\r\n    // prevent the default link behavior\r\n    event.preventDefault();\r\n\r\n    // get the target element id\r\n    const targetId = link.getAttribute('href');\r\n    // get the target element\r\n    const targetElement = document.querySelector(targetId);\r\n\r\n    if (targetElement) {\r\n      // get the target element offsetTop\r\n      const targetOffsetTop = targetElement.offsetTop;\r\n      // set the duration of the scroll animation in milliseconds\r\n      const duration = 1000;\r\n      // set the easing function (cubic easing)\r\n      const easing = (t) => t * t * t;\r\n\r\n      // Save the current scroll position in the browser's session history\r\n      history.pushState({scrollPosition: window.pageYOffset}, '');\r\n\r\n      // scroll to the target element\r\n      scrollTo(targetOffsetTop, duration, easing);\r\n    }\r\n  });\r\n}\r\n\r\nfunction scrollTo(targetOffsetTop, duration, easing) {\r\n  // get the starting scroll position\r\n  const start = window.pageYOffset;\r\n  // get the starting time\r\n  const startTime = 'now' in window.performance ? performance.now() : new Date().getTime();\r\n\r\n  const animateScroll = (currentTime) => {\r\n    // calculate the time elapsed\r\n    const timeElapsed = currentTime - startTime;\r\n    // calculate the scroll distance\r\n    const scrollDistance = targetOffsetTop - start;\r\n    // calculate the new scroll position\r\n    const scrollPosition = easing(Math.min(timeElapsed / duration, 1)) * scrollDistance + start;\r\n\r\n    // set the new scroll position\r\n    window.scrollTo(0, scrollPosition);\r\n\r\n    if (timeElapsed < duration) {\r\n      // call animateScroll again on the next animation frame\r\n      requestAnimationFrame(animateScroll);\r\n    }\r\n  };\r\n\r\n  // start the animation\r\n  requestAnimationFrame(animateScroll);\r\n}\r\n\r\n// Listen for the popstate event, which is triggered when the user clicks the back button\r\nwindow.addEventListener('popstate', (event) => {\r\n  if (event.state && event.state.scrollPosition) {\r\n    const targetOffsetTop = event.state.scrollPosition;\r\n    const duration = 1000;\r\n    const easing = (t) => t * t * t;\r\n\r\n    scrollTo(targetOffsetTop, duration, easing);\r\n  }\r\n});\r\n\r\n"],"names":["addScrollTo","link","addEventListener","event","preventDefault","targetId","getAttribute","targetElement","document","querySelector","targetOffsetTop","offsetTop","duration","easing","t","history","pushState","scrollPosition","window","pageYOffset","scrollTo","start","startTime","performance","now","Date","getTime","animateScroll","currentTime","timeElapsed","scrollDistance","Math","min","requestAnimationFrame","links","querySelectorAll","state"],"mappings":"2FAeA,SAASA,EAAYC,GACdA,EAAAC,iBAAiB,SAAUC,IAE9BA,EAAMC,iBAGA,MAAAC,EAAWJ,EAAKK,aAAa,QAE7BC,EAAgBC,SAASC,cAAcJ,GAE7C,GAAIE,EAAe,CAEjB,MAAMG,EAAkBH,EAAcI,UAEhCC,EAAW,IAEXC,EAAUC,GAAMA,EAAIA,EAAIA,EAG9BC,QAAQC,UAAU,CAACC,eAAgBC,OAAOC,aAAc,IAG/CC,EAAAV,EAAiBE,EAAUC,EACrC,IAEL,CAES,SAAAO,EAASV,EAAiBE,EAAUC,GAE3C,MAAMQ,EAAQH,OAAOC,YAEfG,EAAY,QAASJ,OAAOK,YAAcA,YAAYC,OAAQ,IAAIC,MAAOC,UAEzEC,EAAiBC,IAErB,MAAMC,EAAcD,EAAcN,EAE5BQ,EAAiBpB,EAAkBW,EAEnCJ,EAAiBJ,EAAOkB,KAAKC,IAAIH,EAAcjB,EAAU,IAAMkB,EAAiBT,EAG/EH,OAAAE,SAAS,EAAGH,GAEfY,EAAcjB,GAEhBqB,sBAAsBN,EACvB,EAIHM,sBAAsBN,EACxB,EA5DA,WACQ,MAAAO,EAAQ1B,SAAS2B,iBAAiB,gBAExC,IAAA,MAAWlC,KAAQiC,EACjBlC,EAAYC,EAEhB,IAyDOiB,OAAAhB,iBAAiB,YAAaC,IACnC,GAAIA,EAAMiC,OAASjC,EAAMiC,MAAMnB,eAAgB,CAKpCG,EAJejB,EAAMiC,MAAMnB,eACnB,KACDH,GAAMA,EAAIA,EAAIA,GAG/B"}