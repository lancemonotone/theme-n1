/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_PreviewView extends MM_RBACGeneralEmployeeView
{
	public static $MM_JSACTION_PREVIEW_CHANGE_MEMBERSHIP = "previewChangeMembership";
	public static $MM_JSACTION_PREVIEW_CHANGE_BUNDLES = "previewChangeBundles";
	public static $MM_JSACTION_PREVIEW_SAVE = "savePreview";
	

	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{	
		switch($post[self::$MM_JSACTION]) 
		{
			case self::$MM_JSACTION_PREVIEW_CHANGE_MEMBERSHIP:
				return $this->changeMembershipLevel($post);
				
			case self::$MM_JSACTION_PREVIEW_CHANGE_BUNDLES:
				return $this->changeBundles($post);
				
			case self::$MM_JSACTION_PREVIEW_SAVE:
				return $this->savePreviewSettings($post);
				
			default:
				return new MM_Response();
		}
	}
	
	private function savePreviewSettings($post)
	{
 	 	global $current_user;
		
 	 	$mt = MM_MembershipLevel::getMembershipLevelsList(true);
		$preview = new MM_Preview();
 	 	$mat = array();
 	 	$firstElem = 0;
 	 	
 	 	//// get info
 	 	$previewObj = MM_Preview::getData();
	
 	 	if(isset($post["mm_preview_member_type"]))	
 	 	{
			$firstElem = $post["mm_preview_member_type"];
			$memberType = new MM_MembershipLevel($firstElem);
			$mat = $memberType->getBundles();
	 	 	$days = (isset($post["mm_preview_days"]) && intval($post["mm_preview_days"])>0)?$post["mm_preview_days"]:0;
			
	 	 	/// user id, days, member type id, bundles list
	 	 	$tags = array();
	 	 	if(is_array($mat) || is_object($mat))
	 	 	{
		 	 	foreach($mat as $k=>$v)
		 	 	{
		 	 		$tags[$k] = $days;
		 	 	}
	 	 	}
	 	 	
	 	 	if(isset($post["preview_access_tags"]))
	 	 	{
	 	 		$selectedTags = explode(",", $post["preview_access_tags"]);
	 	 		foreach($selectedTags as $tag)
	 	 		{
		 	 		$tags[$tag] = $days;
	 	 		}
	 	 	} 
	 	 	
	 	 	$preview->setData($current_user->ID,$days, $firstElem, $tags);
 	 		return new MM_Response();
 	 	}
 	 	
 	 	return new MM_Response("Unable to save preview settings", MM_Response::$ERROR);
	}
	
	public static function show()
	{	
 	 	global $current_user;
		
 	 	$mt = MM_MembershipLevel::getMembershipLevelPostAccess();
		$preview = new MM_Preview();
 	 	$mat = array();
 	 	$firstElem = 0;
 	 	
 	 	//// get info
 	 	$previewObj = MM_Preview::getData();
 	 	if(isset($_POST["mm-preview_btn"]))	
 	 	{
			$firstElem = $_POST["mm-preview-member_type"];
			$memberType = new MM_MembershipLevel($firstElem);
			$mat = $memberType->getBundles();
	 	 	$days = (isset($_POST["mm-preview-days"]) && intval($_POST["mm-preview-days"])>0)?$_POST["mm-preview-days"]:0;
			
	 	 	/// user id, days, member type id, bundles list
	 	 	$tags = array();
	 	 	if(is_array($mat) || is_object($mat))
	 	 	{
		 	 	foreach($mat as $k=>$v)
		 	 	{
		 	 		$tags[$k] = $days;
		 	 	}
	 	 	}
	 	 	
	 	 	if($firstElem!="none"){
		 	 	if(isset($_POST["preview_access_tags"]) && is_array($_POST["preview_access_tags"]))
		 	 	{
		 	 		foreach($_POST["preview_access_tags"] as $selectedTags)
		 	 		{
			 	 		$tags[$selectedTags] = $days;
		 	 		}
		 	 	}
	 	 	}
	 	 	
	 	 	$preview->setData($current_user->ID,$days, $firstElem, $tags);
 	 	}
 	 	else if(!$previewObj)
 	 	{
 	 		$firstElem = key($mt);
			$memberType = new MM_MembershipLevel($firstElem);
			$mat = $memberType->getBundles();
	 	 	$tags = array();
	 	 	if(is_array($mat) || is_object($mat))
	 	 	{
		 	 	foreach($mat as $k=>$v)
		 	 	{
		 	 		$tags[$k] = 1;
		 	 	}
	 	 	}
	 	 	$preview->setData($current_user->ID,1, $firstElem, $tags);
 	 	}
 	 	$previewObj = MM_Preview::getData();
 	 	if(empty($mat)){
			$memberType = new MM_MembershipLevel($previewObj->getMembershipId());
			$mat = $memberType->getBundles();
 	 	}
 	 	
		$info = new stdClass();
		$tmpMts = MM_MembershipLevel::getMembershipLevelsList(true);
		$tmpMts["none"] = "Non-Members";
		$info->memberTypes = MM_HtmlUtils::generateSelectionsList($tmpMts,$previewObj->getMembershipId());
		
		$at = MM_Bundle::getBundlePostAccess();
		
		$selectedTags = $previewObj->getBundles();
		
		$sel = array();
		if(is_array($selectedTags))
		{
			foreach($selectedTags as $tag)
			{
				if(!empty($tag)){
					$sel[$tag] = $tag;
				}
			}	
		}
		if(is_array($mat))
		{
			foreach($mat as $key=>$v)
			{
				if(!empty($key)){
					$sel[$key] =$v;
				}
			}
		}
		$info->count_tags = count($at);
		$info->count_applied =count($sel);
		$info->member_type_id = $previewObj->getMembershipId();
		
		$info->accessTags = MM_HtmlUtils::generateSelectionsList($at, $sel,$mat);
		
		//days
		$access_arr = array(
			'member_type'=>array($previewObj->getMembershipId()),
			'access_tag'=>$sel,
		);
		$info->days = self::getDaysOptions($access_arr, $previewObj->getDays());
		
		echo MM_TEMPLATE::generate(MM_MODULES."/preview.php", $info);
	}
	
	/*
	 * Needs to return pre-selected bundles (if any)
	 * Needs to return days associated with bundles (if any)
	 */
	private function changeMembershipLevel($post)
	{
		if(!isset($post["member_type_id"]) || (isset($post["member_type_id"]) && intval($post["member_type_id"])<=0 && $post["member_type_id"]!="none"))
		{
			return new MM_Response("Invalid Membership Level ID!", MM_Response::$ERROR);
		}
		$memberType = new MM_MembershipLevel($post["member_type_id"]);
		if($memberType->getId()>0)
		{	
			$at = MM_Bundle::getBundlePostAccess();
			$mat = $memberType->getBundles();
			$accessTags = MM_HtmlUtils::generateSelectionsList($at, $mat, $mat);
			
			//days
			$access_arr = array(
				'member_type'=>array($post["member_type_id"]),
				'access_tag'=>array_keys($mat),
			);
			$days = self::getDaysOptions($access_arr);
			return new MM_Response(array('access_tags'=>$accessTags,'days'=>$days));
		}
		else if($post["member_type_id"] == "none"){
			return new MM_Response(array('access_tags'=>"",'days'=>0));
		}
		return new MM_Response("Invalid Membership Level ID!", MM_Response::$ERROR);
	}
	
	private static function getDaysOptions($access_arr, $selected=null)
	{
		if(!is_array($access_arr))
			return ""; 
		
		$allDays = array();	
		/*
		 * 'member_type' is a array of id's while 'access_tag' is id=>name values
		 * 
		 * ex. 
		 * 
		 * (Json Encoded result set of access_arr)
		 * {"member_type":["3"],"access_tag":{"1":"MY BUNDLE NAME"}}
		 */
		foreach($access_arr as $type=>$idObj)
		{
			foreach($idObj as $id=>$val){ 
				if($type=="member_type"){
					$allDays[] = MM_ProtectedContentEngine::getPostDays($type, $val);
				}
				else{
					$allDays[] = MM_ProtectedContentEngine::getPostDays($type, $id);
				} 
			}
		}
		
		$daysArr = array();
		$daysArr[0] = 0;
		foreach($allDays as $days)
		{
			foreach($days as $day)
				$daysArr[$day] = $day;
		} 
		ksort($daysArr);
		return MM_HtmlUtils::generateSelectionsList($daysArr, $selected);
	}
	
	/*
	 * This should append extra days (if any)
	 */
	private function changeBundles($post)
	{
		if(!isset($post["preview_access_tags"]) || (isset($post["preview_access_tags"]) && empty($post["preview_access_tags"])))
		{
			return new MM_Response();
		}
		if(!isset($post["member_type_id"]) || (isset($post["member_type_id"]) && intval($post["member_type_id"])<=0))
		{
			return new MM_Response("Invalid Membership Level ID!", MM_Response::$ERROR);
		}
		$accessTags = explode(",", $post["preview_access_tags"]);
		 
		$sel = array();
		foreach($accessTags as $tag)
		{
			$sel[$tag] = $tag;
		}
		
		//days
		$access_arr = array(
			'member_type'=>array($post["member_type_id"]),
			'access_tag'=>$accessTags,
		);
		$days = self::getDaysOptions($access_arr);
		
		$info = new stdClass();
		$at = MM_Bundle::getBundlePostAccess();
		$memberType = new MM_MembershipLevel($post["member_type_id"]);
		$mat = $memberType->getBundles();
		foreach($mat as $k=>$v)
		{
			$sel[$k]=$v;
		}
		$accessTags = MM_HtmlUtils::generateSelectionsList($at, $sel, $mat);
		return new MM_Response(array('access_tags'=>$accessTags,'days'=>$days));
	}
	
}