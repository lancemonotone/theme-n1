/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 *
 */
class MM_MMCoursesExtension extends MM_Extension
{
	public static $OPTION_ACTIVE = "active";
	public static $OPTION_FRESH_INSTALL = "fresh_install";
	public static $OPTION_COURSES_SLUG = "courses-slug";
	public static $OPTION_SHOW_PROTECTED_COURSES = "show-protected-courses";
	public static $OPTION_REMOVE_INSTRUCTOR_LINK = "remove-instructor-link";
	public static $OPTION_ENABLE_CLASSROOM_MODE = "enable-classroom-mode";
	public static $OPTION_BRAND_COLOR = "brand-color";
	public static $OPTION_ACCENT_COLOR = "accent-color";
	public static $OPTION_PROGRESS_COLOR = "progress-color";
	public static $OPTION_MENU_TEXT_COLOR = "menu-text-color";
	public static $OPTION_CLASSROOM_LOGO = "classroom-logo";
	public static $OPTION_LESSON_BUTTON_LOCATION = "lesson-button-location";
	public static $OPTION_COMPLETE_LINK_CSS = "complete-link-css";
	public static $OPTION_PREVIOUS_LINK_CSS = "previous-link-css";
	public static $OPTION_BREADCRUMB_LINK_CSS = "breacrumb-link-css";
	public static $OPTION_WP_FOOTER_HOOK = "wp-footer-hook";
	public static $COURSES_PAGE_SLUG = "membermouse-courses/main.php";

	public function __construct($autoloadDependencies = true, $configData = "")
	{
		parent::__construct($autoloadDependencies, $configData);
		$this->token = MM_Extension::$MM_COURSES_TOKEN;
		add_action('wp_ajax_mm_courses_action', array($this, 'ajaxCoursesAction'));
	}

	public function doInitHook()
	{
		if ($this->isActive() && $this->hasPermission()) {
		}
	}

	public function isActive()
	{
		$plugins = get_option('active_plugins');
		$required_plugin = "membermouse-courses/main.php";
		$isActive = false;

		if (in_array($required_plugin, $plugins)) {
			$isActive = true;
		}

		return $isActive && $this->hasPermission();
	}

	public function isInstalled()
	{
		$plugins = get_plugins();
		$required_plugin = "membermouse-courses/main.php";
		$isInstalled = false;

		if (array_key_exists($required_plugin, $plugins)) {
			$isInstalled = true;
		}

		return $isInstalled;
	}

	public function deactivate()
	{
		$extension_plugin = "membermouse-courses/main.php";
		deactivate_plugins($extension_plugin);
	}

	public function hasPermission()
	{
		return true;
	}

	public function displayListingItem()
	{
		$crntPage = MM_ModuleUtils::getPage();
		$extUrl = MM_ModuleUtils::getUrl($crntPage, MM_MODULE_EXTENSIONS) . "&" . MM_session::$PARAM_SUBMODULE . "=" . MM_Extension::$MM_COURSES_TOKEN;
?>
		<div class="mm-extension <?php echo $this->isActive() ? 'mm-extension-active' : ''; ?>">
			<a href="<?php echo $extUrl; ?>"><img src="<?php echo esc_url(MM_IMAGES_URL . '/courses-logo.svg') ?>" /></a>
		</div>
<?php
	}

	public function displayConfigScreen()
	{
		if (isset($_POST["mm-courses-form"])) {
			// $isActive = isset($_POST["mm-courses-active"]) ? $_POST["mm-courses-active"] : "";
			$showProtectedCourses = isset($_POST["mm-show-protected-courses"]) ? $_POST["mm-show-protected-courses"] : "";
			$removeInstructorLink = isset($_POST["mm-remove-instructor-link"]) ? $_POST["mm-remove-instructor-link"] : "";
			$enableClassroomMode = isset($_POST["mm-enable-classroom-mode"]) ? $_POST["mm-enable-classroom-mode"] : "";
			$coursesSlug = isset($_POST["mm-courses-slug"]) ? $_POST["mm-courses-slug"] : "";
			$brandColor = isset($_POST["mm-brand-color"]) ? $_POST["mm-brand-color"] : "";
			$accentColor = isset($_POST["mm-accent-color"]) ? $_POST["mm-accent-color"] : "";
			$progressColor = isset($_POST["mm-progress-color"]) ? $_POST["mm-progress-color"] : "";
			$menuTextColor = isset($_POST["mm-menu-text-color"]) ? $_POST["mm-menu-text-color"] : "";
			$classroomLogo = isset($_POST["mm-classroom-logo"]) ? $_POST["mm-classroom-logo"] : "";
			$lessonButtonLocation = isset($_POST["mm-lesson-button-location"]) ? $_POST["mm-lesson-button-location"] : "";
			$completeLinkCSS = isset($_POST["mm-complete-link-css"]) ? $_POST["mm-complete-link-css"] : "";
			$previousLinkCSS = isset($_POST["mm-previous-link-css"]) ? $_POST["mm-previous-link-css"] : "";
			$breadcrumbLinkCSS = isset($_POST["mm-breadcrumb-link-css"]) ? $_POST["mm-breadcrumb-link-css"] : "";
			$wpFooterHook = isset($_POST["mm-wp-footer"]) ? $_POST["mm-wp-footer"] : "";

			// $this->setOption(self::$OPTION_ACTIVE, $isActive);
			$this->setOption(self::$OPTION_COURSES_SLUG, $coursesSlug);
			$this->setOption(self::$OPTION_SHOW_PROTECTED_COURSES, $showProtectedCourses);
			$this->setOption(self::$OPTION_REMOVE_INSTRUCTOR_LINK, $removeInstructorLink);
			$this->setOption(self::$OPTION_ENABLE_CLASSROOM_MODE, $enableClassroomMode);
			$this->setOption(self::$OPTION_BRAND_COLOR, $brandColor);
			$this->setOption(self::$OPTION_ACCENT_COLOR, $accentColor);
			$this->setOption(self::$OPTION_PROGRESS_COLOR, $progressColor);
			$this->setOption(self::$OPTION_MENU_TEXT_COLOR, $menuTextColor);
			$this->setOption(self::$OPTION_CLASSROOM_LOGO, $classroomLogo);
			$this->setOption(self::$OPTION_LESSON_BUTTON_LOCATION, $lessonButtonLocation);
			$this->setOption(self::$OPTION_COMPLETE_LINK_CSS, $completeLinkCSS);
			$this->setOption(self::$OPTION_PREVIOUS_LINK_CSS, $previousLinkCSS);
			$this->setOption(self::$OPTION_BREADCRUMB_LINK_CSS, $breadcrumbLinkCSS);
			$this->setOption(self::$OPTION_WP_FOOTER_HOOK, $wpFooterHook);


			if (!isset($_POST["mm-courses-active"]) || empty($_POST["mm-courses-active"])) {
				$this->deactivate();
			}

			$dataSaved = true;
		}

		$isActive = $this->isActive();
		$isInstalled = $this->isInstalled();
		$coursesSlug = $this->getOption(self::$OPTION_COURSES_SLUG);
		$showProtectedCourses = $this->getOption(self::$OPTION_SHOW_PROTECTED_COURSES);
		$removeInstructorLink = $this->getOption(self::$OPTION_REMOVE_INSTRUCTOR_LINK);
		$enableClassroomMode = $this->getOption(self::$OPTION_ENABLE_CLASSROOM_MODE);
		$brandColor = $this->getOption(self::$OPTION_BRAND_COLOR, '#2c3637');
		$accentColor = $this->getOption(self::$OPTION_ACCENT_COLOR, '#2c3637');
		$progressColor = $this->getOption(self::$OPTION_PROGRESS_COLOR, '#1da69a');
		$menuTextColor = $this->getOption(self::$OPTION_MENU_TEXT_COLOR, '#ffffff');
		$classroomLogo = $this->getOption(self::$OPTION_CLASSROOM_LOGO);
		$lessonButtonLocation = $this->getOption(self::$OPTION_LESSON_BUTTON_LOCATION);
		$completeLinkCSS = $this->getOption(self::$OPTION_COMPLETE_LINK_CSS);
		$previousLinkCSS = $this->getOption(self::$OPTION_PREVIOUS_LINK_CSS);
		$breadcrumbLinkCSS = $this->getOption(self::$OPTION_BREADCRUMB_LINK_CSS);
		$wpFooterHook = $this->getOption(self::$OPTION_WP_FOOTER_HOOK);

		if ($isActive) {
			echo MM_TEMPLATE::generate(MM_MODULES . "/courses-settings.php", get_defined_vars());
		} else {
			echo MM_TEMPLATE::generate(MM_MODULES . "/courses-landing.php", compact('isInstalled', 'isActive'));
		}
	}

	/**
	 * Handle actions for MemberMouse Courses
	 *
	 * @return void
	 */
	public function ajaxCoursesAction(){

		if (empty($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'mm_courses_action')) {
			die();
		}

		if (!current_user_can('activate_plugins')) {
			wp_send_json_error(_mmt('Sorry, you don\'t have permission to do this.'));
		}

		$type = sanitize_text_field($_POST['type']);
		$installed = false;
		$activated = false;
		$message = '';
		$result = 'error';
		$redirectUrl = '';

		switch ($type) {
			case 'install-activate': // Install and activate courses
        $installed = $this->install_courses( true );
        $activated = $installed ? $installed : $activated;
        $result = $installed ? 'success' : 'error';
        $message = $installed ? _mmt( 'Courses has been installed and activated successfully. Enjoy!' ) : _mmt( 'Courses could not be installed. Please check your license settings, or contact MemberMouse support for help.' );
				break;
			case 'activate': // Just activate (already installed)
				$activate = activate_plugin('membermouse-courses/main.php');
				$activated = null === $activate ? true : false;
				$message = _mmt( 'Courses has been activated successfully. Enjoy!' );
				$result = 'success';
				break;
			default:
				break;
		}

		delete_option('mepr_courses_flushed_rewrite_rules');


		if ($activated) {
			$redirectUrl = add_query_arg(array(
				'post_type' => 'mmcs-course',
				'courses_activated' => 'true'
			), admin_url('edit.php'));
		}

		wp_send_json_success(array(
			'installed' => $installed,
			'activated' => $activated,
			'result' => $result,
			'message' => $message,
			'redirect' => $redirectUrl
		));
	}

  /**
   * Install the membermouse Courses addon
   *
   * @param boolean $activate Whether to activate after installing
   *
   * @return boolean Whether the plugin was installed
   */
  public function install_courses( $activate = false ) {

		$license = new MM_License();
		if (strpos($_SERVER["PHP_SELF"],"plugins.php") === false){
			MM_MemberMouseService::validateLicense($license);
		}
		
		if(! $license->isValid() ){
			wp_send_json_error(_mmt('License invalid'));
		}

		$license_info = (array) $this->send_mothership_request("/versions/public/membermouse-courses");
		$plugin_url = $license_info['url'] ?? '';

    $plugins = get_plugins();
    wp_cache_delete('plugins', 'plugins');

    if ( empty( $plugin_url ) ) {
      return false;
    }

    // Set the current screen to avoid undefined notices
    set_current_screen( "membermouse_page_{" . self::$COURSES_PAGE_SLUG . "}" );

    // Prepare variables
    $url = esc_url_raw(
      add_query_arg(
        array(
          'page' => self::$COURSES_PAGE_SLUG,
        ),
        admin_url('admin.php')
      )
    );

    $creds = request_filesystem_credentials( $url, '', false, false, null );

    // Check for file system permissions
    if ( false === $creds ) {
      wp_send_json_error( esc_html( 'File system credentials failed.', 'membermouse' ) );
    }
    if ( ! WP_Filesystem( $creds ) ) {
      wp_send_json_error( esc_html( 'File system credentials failed.', 'membermouse' ) );
    }

    // We do not need any extra credentials if we have gotten this far, so let's install the plugin
    require_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';

    // Do not allow WordPress to search/download translations, as this will break JS output
    remove_action( 'upgrader_process_complete', array( 'Language_Pack_Upgrader', 'async_upgrade' ), 20 );

    // Create the plugin upgrader with our custom skin
    $installer = new Plugin_Upgrader( new MM_AddonInstallSkin() );

    $plugin = wp_unslash( $plugin_url );
    $installer->install( $plugin );

    // Flush the cache and return the newly installed plugin basename
    wp_cache_flush();

    if ( $installer->plugin_info() && true === $activate ) {
      activate_plugin( $installer->plugin_info() );
    }

    return $installer->plugin_info();
  }

  public function send_mothership_request( $endpoint,
                                           $args=array(),
                                           $method='get',
                                           $domain='https://mothership.caseproof.com',
                                           $blocking=true ) {
    $uri = $domain.$endpoint;

    $arg_array = array(
      'method'    => strtoupper($method),
      'body'      => $args,
      'timeout'   => 15,
      'blocking'  => $blocking,
      'sslverify' => true,
    );

    $resp = wp_remote_request($uri, $arg_array);

    // If we're not blocking then the response is irrelevant
    // So we'll just return true.
    if($blocking == false) { return true; }

    if(is_wp_error($resp)) {
      throw new \Exception(__('You had an HTTP error connecting to Caseproof\'s Mothership API', 'membermouse-courses'));
    }
    else {
      if(null !== ($json_res = json_decode($resp['body'], true))) {
        if(isset($json_res['error'])) {
          throw new \Exception($json_res['error']);
        }
        else {
          return $json_res;
        }
      }
      else {
        throw new \Exception(__( 'Your License Key was invalid', 'membermouse-courses'));
      }
    }

    return false;
  }


}