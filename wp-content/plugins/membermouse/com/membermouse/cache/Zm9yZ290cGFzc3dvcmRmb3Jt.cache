class MM_ForgotPasswordForm extends MM_AbstractForm
{
	public $success = "";
	
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		if(!is_null($params))
		{
			if(is_array($params) && count($params) > 0)
			{
				foreach($params as $k=>$v)
				{
					$key = strtolower($k);
					$$key = $v;
				}
			}
			
			$this->initialize();
		}
	}
	
	public function initialize()
	{
		if(isset($_REQUEST["email"]))
		{
			$member = MM_User::findByEmail(trim($_REQUEST["email"]));
		
			if($member->isValid())
			{  			
	  			MM_User::generateAndStoreForgotPasswordHash($member);
					
				$email = new MM_Email();
				$employee = MM_Employee::getDefault();
				$context = new MM_Context($member, $employee);
		
				$email->setContext($context);
				$email->setSubject(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_FORGOT_PASSWORD_SUBJECT));
				$email->setBody(MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_FORGOT_PASSWORD_BODY));
		
				$email->setToName($member->getFullName());
				$email->setToAddress($member->getEmail());
				$email->setFromName($employee->getDisplayName());
				$email->setFromAddress($employee->getEmail());
				$response = $email->send();
		
				if(MM_Response::isError($response))
				{
					$this->error = "Unable to send your password reset link";
					
					if(isset($response->message) && !empty($response->message))
					{
						$this->error .= ": ".$response->message;
					}
					
					$this->error .= ".";
				}
				else
				{
					$this->success = "Instructions for resetting your password have been sent to you.";
				}
			}
			else 
			{
				$this->error = "Invalid email address.";
			}
		}
		
		$this->isValid = true;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{		
		$html = $this->getJavascriptIncludes();
		$html .= "<form method=\"post\">
";
		return $html;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{
		$html = "</form>
";
		$html .= $this->getInitJavascript();
		return $html;
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes()
	{
		$version = MemberMouse::getPluginVersion();
		$useMMCSS = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_MM_CSS_FORGOT_PASSWORD) == "1") ? true : false;
		
		if($useMMCSS)
		{
			wp_enqueue_style("membermouse-forgot-password-css", plugins_url(MM_PLUGIN_NAME."/resources/css/user/mm-forgotpassword.css"), array(), $version);
		}
		
		wp_enqueue_script("membermouse-forgot-password", plugins_url(MM_PLUGIN_NAME."/resources/js/user/mm-forgotpassword.js"), array(), $version, true);
	}
	
	/**
	 * This function returns the javascript to initialize the Forgot Password form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript()
	{
		return "";
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Forgot Password forms.";
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		
		if(!isset($type))
		{
			$type = "input";
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		if(!isset($class) || empty($class))
		{
		    $class = "mm-field";
		}
		
		switch(strtolower($type))
		{
			case "input":
				if(isset($name))
				{
					switch(strtolower($name))
					{
						case "email":
							$outputStr .= "<input type=\"text\" id=\"email\" name=\"email\" class=\"{$class}\" {$customattributes} />";
							break;

						default:
							return "Invalid SmartTag Configuration: Invalid name of '{$name}' passed to SmartTag {$code} with type {$type}.";
							break;
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code} with type {$type}.";
				}
				
				break;
				
			default:
				return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}";
				break;
		}
			
		return $outputStr;
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Forgot Password forms.";
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "error":
				    if(!isset($class) || empty($class))
				    {
				        $class = "mm-error";
				    }
				    
					if($form->error != "")
					{
						$outputStr .= "<p id=\"mm-forgot-password-form-message\" class=\"{$class}\">".$form->error."</p>";
					}
					break;
					
				case "success":
				    if(!isset($class) || empty($class))
				    {
				        $class = "mm-success";
				    }
				    
					if($form->success != "")
					{
						$outputStr .= "<p id=\"mm-forgot-password-form-message\" class=\"{$class}\">".$form->success."</p>";
					}
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "submit":
					if(!isset($label))
					{
						$label = "Submit";
					}
					if(!isset($color))
					{
						$color = "";
					}
					if(!isset($class))
					{
						$customClass = "mm-button {$color}";
					}
					else 
					{
						$customClass = $class;
					}
					$outputStr .= "<input type=\"submit\" name=\"submit\" value=\"{$label}\" id=\"mm-submit-button\" class=\"{$customClass}\" {$customattributes} onclick=\"return forgotpassword_js.checkFields();\" />";
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
		
	}
}

