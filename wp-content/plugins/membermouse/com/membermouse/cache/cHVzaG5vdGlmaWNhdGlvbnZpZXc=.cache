/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_PushNotificationView extends MM_RBACAdminView
{
	public static $MM_JSACTION_SEND_TEST_NOTIFY = "sendTestNotification";

	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveNotification($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeNotification($post);
					
				case self::$MM_JSACTION_SEND_TEST_NOTIFY:
					return $this->sendTestNotification($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	private function sendTestNotification($post)
	{ 
		if(!isset($post["action_id"]))
		{
			return new MM_Response("Action ID is required to send a test notification", MM_Response::$ERROR);
		}
		
		$action = new MM_Action($post["action_id"]);
		
		if($action->isValid())
		{
			switch($action->getEventType())
			{
				case MM_Event::$PRODUCT_PURCHASE:
					$userProductData = MM_Event::packageProductData(MM_Product::$SAMPLE_PRODUCT_ID, MM_User::$SAMPLE_USER_ID, MM_Order::$SAMPLE_ORDER_ID, 111);
					$eventAttributes = $action->getEventAttributes();
					if(is_array($eventAttributes) && isset($eventAttributes["product_id"]) && intval($eventAttributes["product_id"]) > 0)
					{
						$userProductData["product_id"] = $eventAttributes["product_id"];
					}
					do_action($action->getEventType(), $userProductData);
					return new MM_Response();
					break;
					
				case MM_Event::$MEMBER_ADD:
					$userData = MM_Event::packageMemberData(MM_User::$SAMPLE_USER_ID);
					
					$eventAttributes = $action->getEventAttributes();
					if(is_array($eventAttributes) && isset($eventAttributes["membership_level_id"]) && intval($eventAttributes["membership_level_id"]) > 0)
					{
						$userData["membership_level"] = $eventAttributes["membership_level_id"];
						
						$membership = new MM_MembershipLevel($eventAttributes["membership_level_id"]);
						$userData["membership_level_name"] = $membership->getName();
					}
					
					do_action($action->getEventType(), $userData);
					return new MM_Response();
					break;

				case MM_Event::$MEMBER_STATUS_CHANGE:
					$userData = MM_Event::packageMemberData(MM_User::$SAMPLE_USER_ID);
					$eventAttributes = $action->getEventAttributes(); 
					$userData["membership_level"] = $eventAttributes["membership_level_id"];
					if(is_array($eventAttributes) && isset($eventAttributes["status_id"]) && intval($eventAttributes["status_id"]) > 0)
					{
						$userData["status"] = $eventAttributes["status_id"];
						$userData["status_name"] = MM_Status::getName($eventAttributes["status_id"]);
					}
					do_action($action->getEventType(), $userData);
					return new MM_Response();
					break;
						
				case MM_Event::$MEMBER_ACCOUNT_UPDATE:
				case MM_Event::$MEMBER_DELETE:
				case MM_Event::$MEMBER_MEMBERSHIP_CHANGE:
					do_action($action->getEventType(), MM_Event::packageMemberData(MM_User::$SAMPLE_USER_ID));
					return new MM_Response();
					break;
					
				case MM_Event::$BUNDLE_ADD:
					$bundleData = MM_Event::packageBundleData(MM_User::$SAMPLE_USER_ID, MM_AppliedBundle::$SAMPLE_APPLIED_BUNDLE_ID);
						
					$eventAttributes = $action->getEventAttributes();
					if(is_array($eventAttributes) && isset($eventAttributes["bundle_id"]) && intval($eventAttributes["bundle_id"]) > 0)
					{
						$bundleData["bundle_id"] = $eventAttributes["bundle_id"];
						$bundle = new MM_Bundle($eventAttributes["bundle_id"]);
						$bundleData["bundle_name"] = $bundle->getName();
					}
					do_action($action->getEventType(), $bundleData);
					return new MM_Response();
					break;
					
				case MM_Event::$BUNDLE_STATUS_CHANGE:
					$bundleData = MM_Event::packageBundleData(MM_User::$SAMPLE_USER_ID, MM_AppliedBundle::$SAMPLE_APPLIED_BUNDLE_ID);
						
					$eventAttributes = $action->getEventAttributes();
					if(is_array($eventAttributes) && isset($eventAttributes["status_id"]) && intval($eventAttributes["status_id"]) > 0)
					{
						$bundleData["bundle_status"] = $eventAttributes["status_id"];
						$bundleData["bundle_status_name"] = MM_Status::getName($eventAttributes["status_id"]);
					}
					do_action($action->getEventType(), $bundleData);
					return new MM_Response();
					break;
					
				case MM_Event::$PAYMENT_RECEIVED:
				case MM_Event::$PAYMENT_REBILL:
				case MM_Event::$PAYMENT_REBILL_DECLINED:
				case MM_Event::$REFUND_ISSUED:
					do_action($action->getEventType(), MM_Event::packageOrderData(MM_User::$SAMPLE_USER_ID, MM_Order::$SAMPLE_ORDER_ID, 111, 1111));
					return new MM_Response();
					break;
					
				case MM_Event::$COMMISSION_INITIAL:
				case MM_Event::$COMMISSION_REBILL:
				case MM_Event::$CANCEL_COMMISSION:
					$commissionProfile = MM_CommissionProfile::getDefaultCommissionProfile();
					$orderData = MM_Event::packageOrderData(MM_User::$SAMPLE_USER_ID, MM_Order::$SAMPLE_ORDER_ID, 111, 1111);
					$isRebill = ($action->getEventType() == MM_Event::$COMMISSION_REBILL) ? true : false;
					do_action($action->getEventType(), MM_Event::packageAffiliateData($commissionProfile, "sampleaffiliate", "1000-124", "100.00", $orderData, $isRebill));
					return new MM_Response();
					break;
					
				default:
					return new MM_Response("Event '{$action->getEventType()}' is not supported", MM_Response::$ERROR);
			}
		}
		else
		{
			return new MM_Response("Invalid action passed. Could not execute test notification.", MM_Response::$ERROR);
		}
	} 
	
	public function getViewData(MM_DataGrid $dg)
	{
		global $wpdb;
		$rows = parent::getData(MM_TABLE_ACTIONS, null, $dg);
		return $rows;
	}
	
	private function saveNotification($post)
	{
		$action = new MM_Action();
		
		if(isset($post["mm_action_id"]) && intval($post["mm_action_id"]) > 0)
		{
			$action->setId($post["mm_action_id"]);
		}
		 
		$eventType = $post["mm_event_type"];
		$action->setEventType($eventType);
		$action->setActionType($post["mm_action_type"]);
		$action->setStatus($post["mm_action_status"]);
		
		if($post["mm_action_type"] == MM_Action::$MM_ACTION_SEND_EMAIL)
		{
			$emailToId = $post["mm_send_email_to"];
			$emailFromId = $post["mm_send_email_from"];
			$emailCC = trim($post["mm_send_email_cc"]);
			$emailSubject = $post["mm_send_email_subject"];
			$emailBody = $post["mm_send_email_body"];
		 
			// check email if not set to Current Member
			if($emailToId!=-1)
			{
				// check email is valid via employee id
				$employee = new MM_Employee($emailToId);
				if($employee->isValid())
				{
					$email = $employee->getEmail(); 
					if(!MM_Utils::hasValidEmail($email))
					{
						return new MM_Response("Empty or invalid email string ".$email, MM_Response::$ERROR);
					}
				}
				else
				{
					return new MM_Response("Invalid employee account ".$emailToId, MM_Response::$ERROR);
				}
			}
			
			// don't forget to check the CC (if included)
			if(strlen($emailCC)>0 && !MM_Utils::hasValidEmail($emailCC))
			{
				return new MM_Response("Empty or invalid CC email string ".$emailCC, MM_Response::$ERROR);
			}

			$smartTagsValid = $this->validateSmartTagUsage($eventType, $emailBody, $emailSubject);
			
			if(MM_Response::isError($smartTagsValid))
			{
				return $smartTagsValid;
			}
			
			$action->setActionValue(MM_Action::prepareSendEmailValue($emailToId, $emailFromId, $emailCC, $emailSubject, $emailBody));
		}
		else if($post["mm_action_type"] == MM_Action::$MM_ACTION_NOTIFY_ZAPIER)
		{
			$mailbox = $post["mm_notify_zapier_mailbox"];
			$emailFromId = $post["mm_notify_zapier_from"];
			$additionalInfo = $post["mm_notify_zapier_additional_info"];

			if(!MM_Utils::hasValidEmail($mailbox))
			{
				return new MM_Response("Empty or invalid email string.", MM_Response::$ERROR);
			}
			
			$smartTagsValid = $this->validateSmartTagUsage($eventType, $additionalInfo, "");
				
			if(MM_Response::isError($smartTagsValid))
			{
				return $smartTagsValid;
			}
			
			$action->setActionValue(MM_Action::prepareNotifyZapierValue($mailbox, $emailFromId, $additionalInfo));
		}
		else if($post["mm_action_type"] == MM_Action::$MM_ACTION_CALL_SCRIPT)
		{
			$scriptUrl = $post["mm_script_url"];

			if(!filter_var($scriptUrl, FILTER_VALIDATE_URL) || !preg_match("/^https?:\/\//", $scriptUrl))
			{
				return new MM_Response("Empty or invalid URL string.", MM_Response::$ERROR);
			}
			$action->setActionValue(MM_Action::prepareCallScriptValue($scriptUrl));
		}
		 
		// set attributes
		$attributes = array();
		
		switch($action->getEventType())
		{
			case MM_Event::$PRODUCT_PURCHASE:
				$attributes["product_id"] = $post["mm_product_purchase_selector"];
				break;
				
			case MM_Event::$MEMBER_ADD:
				$attributes["membership_level_id"] = $post["mm_member_add_selector"];
				break;

			case MM_Event::$MEMBER_DELETE:
				if(($post["mm_action_type"] == MM_Action::$MM_ACTION_SEND_EMAIL) && 
					($post["mm_send_email_to"] == MM_Action::$CURRENT_MEMBER_PLACEHOLDER))
				{
					return new MM_Response("Member deleted push notifications can't be sent to the current member.\n\nBy the time the notification is executed, the member's account will alraedy be deleted so all member data, including email address, will be unavailable.", MM_Response::$ERROR);
				}
				break;
				
			case MM_Event::$MEMBER_STATUS_CHANGE:
				$attributes["membership_level_id"] = $post["mm_member_selector"];
				$attributes["status_id"] = $post["mm_member_status_selector"];
				break;
				
			case MM_Event::$BUNDLE_ADD:
				$attributes["bundle_id"] = $post["mm_bundle_add_selector"];
				break;
			
			case MM_Event::$BUNDLE_STATUS_CHANGE:
				$attributes["bundle_id"] = $post["mm_bundle_selector"];
				$attributes["status_id"] = $post["mm_bundle_status_selector"];
				break;
		}
		
		$action->setEventAttributes($attributes);
		
		return $action->commitData();
	}
	
	/**
	 * This function takes an event type and an email body and subject and checks to ensure that 
	 * mm_order_data and mm_order_decision SmartTags are not being used when the event type is not 
	 * a payment or affiliate related event
	 * 
	 * @return MM_Response
	 */
	private function validateSmartTagUsage($eventType, $emailBody, $emailSubject)
	{
		if($eventType != MM_Event::$PAYMENT_RECEIVED && $eventType != MM_Event::$PAYMENT_REBILL
				&& $eventType != MM_Event::$PAYMENT_REBILL_DECLINED && $eventType != MM_Event::$REFUND_ISSUED
				&& $eventType != MM_Event::$COMMISSION_INITIAL && $eventType != MM_Event::$COMMISSION_REBILL
				&& $eventType != MM_Event::$CANCEL_COMMISSION && $eventType != MM_Event::$PRODUCT_PURCHASE)
		{
			$validEvents = "The following is a list of valid events:\n";
			$validEvents .= MM_Event::getName(MM_Event::$PAYMENT_RECEIVED)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$PAYMENT_REBILL)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$PAYMENT_REBILL_DECLINED)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$REFUND_ISSUED)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$COMMISSION_INITIAL)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$COMMISSION_REBILL)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$CANCEL_COMMISSION)."\n";
			$validEvents .= MM_Event::getName(MM_Event::$PRODUCT_PURCHASE)."\n";
		
			$pattern = "\[mm_order_data";
		
			if(preg_match("/{$pattern}/i", stripslashes($emailSubject)) || preg_match("/{$pattern}/i", stripslashes($emailBody)))
			{
				$msg = "The [MM_Order_Data] SmartTag can only be used with payment and affiliate events.\n\n".$validEvents;
				return new MM_Response($msg, MM_Response::$ERROR);
			}
		
			$pattern = "\[mm_order_decision";
		
			if(preg_match("/{$pattern}/i", stripslashes($emailSubject)) || preg_match("/{$pattern}/i", stripslashes($emailBody)))
			{
				$msg = "The [MM_Order_Decision] SmartTag can only be used with payment and affiliate events.\n\n".$validEvents;
				return new MM_Response($msg, MM_Response::$ERROR);
			}
		}
		
		return new MM_Response();
	}
	
	private function removeNotification($post)
	{
		if(isset($post["id"]) && intval($post["id"]) > 0)
		{
			$action = new MM_Action($post["id"], false);
			return $action->delete();
		}
		
		return new MM_Response("Unable to delete notification. No id specified.", MM_Response::$ERROR);
	}
}
