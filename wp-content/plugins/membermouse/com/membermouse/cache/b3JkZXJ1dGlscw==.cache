/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_OrderUtils
{	
	/**
	 * This method takes an $order object and determines the rebill total and discount by iterating
	 * over the order items.
	 * 
	 * @param MM_Order $order the order to calculate rebill amounts for
	 * @return array an array containing the rebill total and discount amounts
	 */
	public static function getRebillAmounts(MM_Order $order)
	{
		$data = array();
		$data["rebill_total"] = 0;
		$data["rebill_shipping"] = 0;
		$data["rebill_subtotal"] = 0;
		$data["rebill_discount"] = 0;
		$data["rebill_date"] = 0;
		
		if($order->isValid())
		{
			$orderItems = $order->getProducts();
			$rebillOrderTotal = 0;
			$rebillDiscount = 0;
			
			foreach($orderItems as $orderItem)
			{
				$product = new MM_Product($orderItem->getItemId());
					
				if($product->isValid())
				{
				    global $wpdb;
				
				    $transactionLookupSQL = "SELECT MIN(transaction_date) AS first_transaction_date, MAX(transaction_date) AS last_transaction_date ".
								    "FROM ".MM_TABLE_TRANSACTION_LOG. " WHERE order_item_id=%s AND (transaction_type='".MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT."')";
				    $transactionLookupSQL = $wpdb->prepare($transactionLookupSQL,$orderItem->getId());
				    $pymtInfo = $wpdb->get_row($transactionLookupSQL);
				    
				    if (($pymtInfo->last_transaction_date != null))
				    {
				        $data["rebill_date"] = $pymtInfo->last_transaction_date;
				    }
				    
					$data["rebill_total"] += $orderItem->getRecurringAmount();
					
					if(!is_null($orderItem->getRecurringDiscount()))
					{
						$data["rebill_subtotal"] += floatval($orderItem->getRecurringAmount()) + floatval($orderItem->getRecurringDiscount());
						$data["rebill_discount"] += $orderItem->getRecurringDiscount();
					}
					else 
					{
						$data["rebill_subtotal"] += $product->getPrice(false);
						
						// check if the price is discounted
						if($product->getPrice(false) > $orderItem->getRecurringAmount())
						{
							$data["rebill_discount"] += floatval($product->getPrice(false)) - floatval($orderItem->getRecurringAmount());
						}
					}
				}
			}
		}
		
		return $data;
	}
}
