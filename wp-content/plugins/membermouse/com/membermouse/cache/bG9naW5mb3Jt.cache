class MM_LoginForm extends MM_AbstractForm
{	
	public $username;
	public $success;
	
	/**
	 * Default constructor. Takes an associative array of configuration parameters
	 * @param Array $params an associative array of form configuration parameters
	 */
	public function __construct($params=null)
	{	
		if(!is_null($params))
		{
			if(is_array($params) && count($params) > 0)
			{
				foreach($params as $k=>$v)
				{
					$key = strtolower($k);
					$$key = $v;
				}
			}
			
			$this->initialize();
		}
	}
	
	public function initialize()
	{
		$errors   = MM_Messages::get(MM_Session::$KEY_ERRORS);
		$messages = MM_Messages::get(MM_Session::$KEY_MESSAGES);
		$username = MM_Session::value(MM_Session::$KEY_LOGIN_FORM_USERNAME);
		
		MM_Session::clear(MM_Session::$KEY_LOGIN_FORM_USER_ID);
		
		if($username !== false)
		{
			$this->username = $username;
			MM_Session::clear(MM_Session::$KEY_LOGIN_FORM_USERNAME);
		}
		
		if(is_array($errors))
		{
			$this->error = implode("<br />", $errors);
			
		}
		
		if(is_array($messages))
		{
			$this->success = implode("<br />", $messages);
		}
		
		MM_Messages::clear();
		
		$this->isValid = true;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at 
	 * the top of the form based on the the current configuration.
	 * @return String header HTML for the checkout form
	 */
	public function generateFormHeader()
	{		
		$this->getJavascriptIncludes();
		
		$actionUrl = esc_url(site_url('wp-login.php', 'login_post'));
		
		if(MM_Utils::isSSL())
		{
			$actionUrl = preg_replace("/(http\:)/", "https:", $actionUrl);
		}
		
		$html = "<form action=\"".$actionUrl."\" method=\"post\" id=\"mm-login-form\">
";
		return $html;
	}
	
	/**
	 * This function is responsible for generating all of the HTML that should show up at
	 * the bottom of the form based on the the current configuration.
	 * 
	 * @return String footer HTML for the checkout form
	 */
	public function generateFormFooter()
	{	
		$html = "</form>
";
		$html .= $this->getInitJavascript();
		return $html;
	}
	
	/**
	 * This function returns the include statements for required javascript files.
	 * @return String that contains the javascript for including required javascript files.
	 */
	public function getJavascriptIncludes()
	{
		$version = MemberMouse::getPluginVersion();
		$useMMCSS = (MM_OptionUtils::getOption(MM_OptionUtils::$OPTION_KEY_USE_MM_CSS_LOGIN) == "1") ? true : false;
		
		if($useMMCSS)
		{
			wp_enqueue_style("membermouse-login-css", plugins_url(MM_PLUGIN_NAME."/resources/css/user/mm-login.css"), array(), $version);
		}
		
		wp_enqueue_script("membermouse-login-form", plugins_url(MM_PLUGIN_NAME."/resources/js/user/mm-login-form.js"), array(), $version, true);
	}
	
	/**
	 * This function returns the javascript to initialize the Login form. 
	 * @param array $defaultData this contains the default data used to prepopulate certain form elements
	 * @return String that contains the javascript to initializes the checkout form.
	 */
	public function getInitJavascript()
	{	
		return "<script>var mm_nonce_name_login_form = '" . MM_LoginFormView::$MM_NONCE_NAME_LOGIN_FORM . "';</script>";
	}
	
	/**
	 * This function processes the MM_Form_Section tag. It is responsible for checking if the current user 
	 * should see the contents of this section based on the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_section($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Login forms.";
	}
	
	/**
	 * This function processes the MM_Form_Field tag. It is responsible for rendering the 
	 * form field based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_field($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
		
		if(!isset($type))
		{
			$type = "input";
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		switch(strtolower($type))
		{
			case "input":
				if(isset($name))
				{
					switch(strtolower($name))
					{
						case "username":
						    if(!isset($class) || empty($class))
						    {
						        $class = "mm-field";
						    }
						    
							$outputStr .= "<input type=\"text\" id=\"log\" name=\"log\" class=\"{$class}\" {$customattributes} ";
							
							if(!empty($form->username))
							{
								$outputStr .= "value=\"{$form->username}\" ";
							}
							
							$outputStr .= "/>";
							break;
							
						case "password":
						    if(!isset($class) || empty($class))
						    {
						        $class = "mm-field";
						    }
						    
							$outputStr .= wp_nonce_field( MM_LoginFormView::$MM_NONCE_ACTION_LOGIN_FORM, MM_LoginFormView::$MM_NONCE_NAME_LOGIN_FORM, true, false);
							$outputStr .= "<input type=\"password\" id=\"pwd\" name=\"pwd\" class=\"{$class}\" {$customattributes} />";
							break;
							
						case "rememberme":						    
							$outputStr .= "<label for=\"rememberme\" class=\"mm-remember-me\">
";
							$outputStr .= "<input name=\"rememberme\" id=\"rememberme\" type=\"checkbox\" checked=\"checked\" value=\"forever\" {$customattributes} ";
                            
                            if(!empty($class))
                            {
                                $outputStr .= " class=\"{$class}\" ";    
                            }
							
							$outputStr .= "/>";

          					if(isset($label)) 
          					{
          						$outputStr .= $label;
          					}
          					
          					$outputStr .= "</label>";
							break;

						default:
							return "Invalid SmartTag Configuration: Invalid name of '{$name}' passed to SmartTag {$code} with type {$type}.";
							break;
					}
				}
				else
				{
					return "Invalid SmartTag Configuration: The 'name' attribute is required for SmartTag {$code} with type {$type}.";
				}
				
				break;
				
			default:
				return "Invalid SmartTag Configuration: Invalid type of '{$type}' passed to SmartTag {$code}";
				break;
		}
			
		return $outputStr;
	}
	
	/**
	 * This function processes the MM_Form_Data tag. It is responsible for rendering the 
	 * data element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_data($content, $atts, $code)
	{
		return "Invalid SmartTag Configuration: The '{$code}' SmartTag is not supported for Login forms.";
	}
	
	/**
	 * This function processes the MM_Form_Message tag. It is responsible for rendering the 
	 * message element based on the type passed and the form configuration.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_message($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "error":
					if($form->error != "")
					{
					    if(!isset($class) || empty($class))
					    {
					        $class = "mm-error";
					    }
					    
						$outputStr .= "<p id=\"mm-login-form-message\" class=\"{$class}\" {$customattributes}>".$form->error."</p>";
					}
					break;
				
				case "success":
					if($form->success != "")
					{
					    if(!isset($class) || empty($class))
					    {
					        $class = "mm-success";
					    }
					    
						$outputStr .= "<p id=\"mm-login-form-message\" class=\"{$class}\" {$customattributes}>".$form->success."</p>";
					}
					break;
				
				default:
					return "Invalid type of '{$type}' passed to {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}
	}
	
	/**
	 * This function processes the MM_Form_Button tag. It is responsible for 
	 * returning the appropriate javascript to submit the form based on the type passed.
	 * @param String $content the content contained within the SmartTag (if any)
	 * @param Array $atts an associative array of attributes associated with the SmartTag
	 * @param String $code the raw version of the SmartTag name (i.e. not case-insentive, not broken up into parts)
	 * @return String a string based on the $content passed with all SmartTags processed
	 */
	public function mm_form_button($content, $atts, $code)
	{
		$outputStr = "";
	
		if(is_array($atts) && count($atts) > 0)
		{
			foreach($atts as $k=>$v)
			{
				$key = strtolower($k);
				$$key = $v;
			}
		}
		
		if(!isset($customattributes) || empty($customattributes))
		{
		    $customattributes = "";
		}
		
		$form = MM_ObjectCache::get(MM_ObjectCache::$KEY_LAST_FORM);
	
		if(isset($type))
		{
			switch(strtolower($type))
			{
				case "login":
					if(!isset($label))
					{
						$label = "Login";
					}
					if(!isset($color))
					{
						$color = "";
					}
					if(!isset($class))
					{
						$customClass = "mm-button {$color}";
					}
					else 
					{
						$customClass = $class;
					}
					$outputStr .= "<input type=\"submit\" name=\"submit\" value=\"{$label}\" id=\"mm-login-button\" class=\"{$customClass}\" {$customattributes} />";
					break;
					
				default:
					return "Invalid type of '{$type}' passed to SmartTag {$code}";
					break;
			}
			
			return $outputStr;
		}
		else
		{
			return "Invalid SmartTag Configuration: The 'type' attribute is required for {$code} SmartTag";
		}	
	}
}

