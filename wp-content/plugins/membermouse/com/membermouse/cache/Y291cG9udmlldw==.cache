class MM_CouponView extends MM_RBACProductManagerView {

	public static $MM_JSACTION_ARCHIVE = "archive";
	public static $MM_JSACTION_UNARCHIVE = "unarchive";
	public static $MM_JSACTION_STORE_COUPON_SEARCH_OPTIONS = "storeCouponSearchOptions";
	
	public static $SEARCH_OPTION_SHOW_ARCHIVED = "mm-option-show-archived-coupons";
	public static $SEARCH_OPTION_SHOW_EXPIRED = "mm-option-show-expired-coupons";
	
	public function __construct()
	{
		parent::__construct();
	}
	
	public function performAction($post) 
	{			
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SAVE:
					return $this->saveCoupon($post);
					
				case self::$MM_JSACTION_REMOVE:
					return $this->removeCoupon($post);
					
				case self::$MM_JSACTION_ARCHIVE:
					return $this->archiveCoupon($post);
					
				case self::$MM_JSACTION_UNARCHIVE:
					return $this->unarchiveCoupon($post);
					
				case self::$MM_JSACTION_STORE_COUPON_SEARCH_OPTIONS:
					return $this->storeCouponSearchOptions($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}

 	
 	public function getViewData($dg)
 	{
		global $wpdb;
		global $current_user;
		
		$where = " WHERE is_gift = '0' ";
		$showArchivedCoupons = false;
		$showExpiredCoupons = false;
		
		if(isset($current_user->ID))
		{
			$showArchivedCoupons = (MM_OptionUtils::getOption(self::$SEARCH_OPTION_SHOW_ARCHIVED."-".$current_user->ID) == "1") ? true : false;
			$showExpiredCoupons = (MM_OptionUtils::getOption(self::$SEARCH_OPTION_SHOW_EXPIRED."-".$current_user->ID) == "1") ? true : false;
		}
		
		if(!$showArchivedCoupons)
		{
			$where .= "AND is_archived = '0' ";
		}
		
		if(!$showExpiredCoupons)
		{
			$mysqlNow = MM_Utils::getCurrentTime();
			$where .= "AND (start_date <= '{$mysqlNow}') AND ((end_date IS NULL) OR (end_date LIKE '0000-%') OR (end_date >= '{$mysqlNow}'))";
			$where .= "AND ((quantity = '-1') OR (quantity > (select count(*) AS total FROM ".MM_TABLE_COUPON_USAGE." u WHERE u.coupon_id = c.id)))";
		}
		
		$sqlResultCount = "SELECT COUNT(DISTINCT id) AS total FROM `".MM_TABLE_COUPONS."` c {$where}";		
		$totalCount = $wpdb->get_var($sqlResultCount);
		
		$sql = "select 
					'{$totalCount}' as total, 
					`c`.`id` AS `id`,
					`c`.`coupon_name` AS `coupon_name`,
					`c`.`coupon_code` AS `coupon_code`,
					`c`.`coupon_type` AS `coupon_type`,
					`c`.`coupon_value` AS `coupon_value`,
					`c`.`description` AS `description`,
					`c`.`quantity` AS `quantity`,
					`c`.`start_date` AS `start_date`,
					`c`.`end_date` AS `end_date`,
					`c`.`date_modified` AS `date_modified`,
					`c`.`date_added` AS `date_added`,
					(select count(0) AS `total` from `mm_coupon_usage` where (`mm_coupon_usage`.`coupon_id` = `c`.`id`)) AS `quantity_used`,
					(select group_concat(`p`.`name` separator ', ') AS `restrictions` from (`mm_coupon_restrictions` `r` left join `mm_products` `p` on((`r`.`product_id` = `p`.`id`))) where (`c`.`id` = `r`.`coupon_id`) group by `c`.`id`) AS `product_restrictions` 
					from 
					`".MM_TABLE_COUPONS."` c {$where} ";
	
		if(!is_null($dg) && !is_null($dg->sortBy) && !empty($dg->sortBy)) 
		{
			$sql.= "ORDER BY {$dg->sortBy} {$dg->sortDir}";
		}
		
		
		if(!is_null($dg)) 
		{
			$sql .= $dg->getLimitSql();
		}
		
		$result = $wpdb->get_results($sql);
		
		if(!$result || is_null($result)) 
		{
			return array();
		}
		
		return $result;
 	}
	
	private function removeCoupon($post)
	{
		if(isset($post["id"]))
		{
			$id = (isset($post["id"]))?$post["id"]:"0";
			$coupon = new MM_Coupon($id);
			$mediator = new MM_PaymentServiceMediator();
			$response = $mediator->notifyCouponRemoved($coupon);
			if ($response->type == MM_Response::$ERROR)
			{
				return $response;
			}
			$coupon->remove();
		}
		return new MM_Response();
	}
	
	private function archiveCoupon($post)
	{
		if(isset($post["id"]))
		{
			$id = (isset($post["id"]))?$post["id"]:"0";
			$coupon = new MM_Coupon($id);
			$coupon->setIsArchived(true);
			$result = $coupon->commitData();
			
			if($result !== false)
			{
				return new MM_Response("Coupon has been archived");
			}
		}
		return new MM_Response();
	}
	
	private function unarchiveCoupon($post)
	{
		if(isset($post["id"]))
		{
			$id = (isset($post["id"]))?$post["id"]:"0";
			$coupon = new MM_Coupon($id);
			$coupon->setIsArchived(false);
			$result = $coupon->commitData();
			
			if($result !== false)
			{
				return new MM_Response("Coupon has been unarchived");
			}
		}
		return new MM_Response();
	}
	
	private function saveCoupon($post){
		
		$blankFields = array("mm_coupon_name","mm_coupon_code");
		foreach($blankFields as $field)
		{
			if($post[$field] == "")
			{
				return new MM_Response("{$field} must be completed", MM_Response::$ERROR);
			}	
		}
		
		if(strlen($post["mm_coupon_name"]) > 255)
		{
		    return new MM_Response("Coupon name must be less than 255 characters.", MM_Response::$ERROR);
		}
		
		if(($post["mm_coupon_type"] == MM_Coupon::$TYPE_PERCENTAGE) 
				&& ($post["mm_recurring_setting"] == MM_Coupon::$TYPE_RECURRING_BILLING_SETTING_ALL) 
				&& (floatval($post["mm_coupon_value"]) >= 100))
		{
			return new MM_Response("The discount value for a % off coupon must be less than 100 when applying the discount to all charges.\n\nIf you want to offer a 100% discount across all charges, select 'Free' from the discount type drop down.", MM_Response::$ERROR);
		}
		
		if (!empty($post['mm_end_date']) && (strtotime($post['mm_start_date']) > strtotime($post['mm_end_date'])))
		{
		    return new MM_Response(_mmt("Start Date must be before End Date"), MM_Response::$ERROR);
		}
		
		$id = (isset($post["id"]))?$post["id"]:"0";
		$coupon = new MM_Coupon($id);
		$info = $coupon->getFormFields();
		
		if($post["mm_quantity"] == "" || strtolower($post["mm_quantity"])=="unlimited"){
			$post["mm_quantity"] = "-1";
		}
		else{
			$post["mm_quantity"] = intval($post["mm_quantity"]);
		}
		
		foreach($info as $k=>$v){
			$key = "mm_".$k;
			if(isset($post[$key])){
				$info->$k = $post[$key];
			}
		}
		$coupon->setQuantity($post["mm_quantity"]);
		
		$info->start_date = MM_Utils::dateToUTC($post['mm_start_date'], "Y-m-d H:i", "00:00:00");
		
		if(!empty($post["mm_end_date"]))
		{
			$info->end_date = MM_Utils::dateToUTC($post['mm_end_date'], "Y-m-d H:i", "23:59:59");
		}
		
		if(!preg_match("/^[a-zA-Z0-9_]+$/", $post["mm_coupon_code"])){
			return new MM_Response("Coupon code can contain letters, numbers, or an '_'.  No spaces allowed.", MM_Response::$ERROR);
		}
		$info->recurring_billing_setting = $post["mm_recurring_setting"];
		
		$saveProds = array();
		if(isset($post["mm_products"])){
			$products = $post["mm_products"];
			if(is_array($products)){
				foreach($products as $id)
				{
					$saveProds[$id] = $id;
				}
				$info->products = $saveProds;
			}
		}
		else 
		{
			$info->products = $saveProds;
		}
		
		$info->coupon_value_currency = MM_CurrencyUtil::getActiveCurrency();
		
		$coupon->setData($info);
		$ret = $coupon->commitData();
		if($ret!==false)
		{
			$mediator = new MM_PaymentServiceMediator();
			$response = $mediator->notifyCouponAdded($coupon);
			if ($response->type == MM_Response::$ERROR)
			{
				$coupon->remove();
				return $response;
			}	
			return $response;
		}
		return new MM_Response("Unable to save coupon as it may already be in use", MM_Response::$ERROR);
	}
	
	private function storeCouponSearchOptions($post)
	{
		if(isset($post["mm_admin_id"]))
		{
			if(isset($post["mm_show_archived_coupons"]))
			{
				$optionName = self::$SEARCH_OPTION_SHOW_ARCHIVED."-".$post["mm_admin_id"];
				MM_OptionUtils::setOption($optionName, $post["mm_show_archived_coupons"]);
			}
			
			if(isset($post["mm_show_expired_coupons"]))
			{
				$optionName = self::$SEARCH_OPTION_SHOW_EXPIRED."-".$post["mm_admin_id"];
				MM_OptionUtils::setOption($optionName, $post["mm_show_expired_coupons"]);
			}
			
			return new MM_Response();
		}
		else
		{
			return new MM_Response("Unable to store coupon search options. Couldn't find current admin user ID.", MM_Response::$ERROR);
		}
	}
}