/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_RepairCorePagesView extends MM_RBACAdminView
{
	public static $MM_JSACTION_REPAIR_CORE_PAGES = "repairCorePages";

	public function __construct()
	{
		parent::__construct();
	}
	
 	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_REPAIR_CORE_PAGES:
					return $this->repairCorePages($post);
					break;
				default:
					return new MM_Response($response,MM_Response::$SUCCESS,true);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	
	protected function repairCorePages($post)
	{
	    global $wpdb;
	    
	    //The installer can take care of most of these problems. The exception is when there is an entry in the mm_core_pages table that has a page_id that doesnt exist in the wp_posts table
	    //To the installer, it looks like that core page exists. So here, we will delete invalid core page table links and let the installer repopulate them
	    
	    $data = $this->findMissingCorePages();
	    if (isset($data->corePagesMissingPosts) && is_array($data->corePagesMissingPosts))
	    {
	        $defsMissingPostsIDString = implode(",",$data->corePagesMissingPosts);
	        $wpdb->query("DELETE FROM ".MM_TABLE_CORE_PAGES." WHERE id IN ({$defsMissingPostsIDString})");
	    }
	    
	    //if there are any core pages in the trash, set them to published again
	    if (isset($data->pagesInTrash) && is_array($data->pagesInTrash))
	    {
	       $idsInTrashString = implode(",",array_keys($data->pagesInTrash));
	       $wpdb->query("UPDATE {$wpdb->posts} SET post_status='publish' WHERE (ID IN ({$idsInTrashString})) AND (post_status = 'trash')");  
	    }
	    
	    // reinstall core pages
	    $installer = new MM_Install();
	    $installer->setupCorePages();
	    
	    //rebuild core page cache
	    MM_CorePageEngine::createCorePageCache();
	    
	    return new MM_Response("Core Page repair operation complete",MM_Response::$SUCCESS,true);	
	}
	
	
	/**
	 * Check to make sure all of the core page types required by MemberMouse are defined in the database table
	 * 
	 * @return array of core page types (represented as objects with an id and a name) not found in the core page types table. This array will be empty if all types are present
	 */
	public function findTypesNotDefined()
	{
	    global $wpdb;
	    
	    $typesPresent = $wpdb->get_var("SELECT group_concat(id) FROM ".MM_TABLE_CORE_PAGE_TYPES." ORDER BY id");
	    $typesPresent = explode(",",$typesPresent);
	    
	    $typesExpected = [];
	    for ($i=1; $i<=13; $i++)
	    {
	       // there is no core page with type ID equal to 8 so ignore this
	       if ($i != 8)
	       {
	           $typesExpected[] = $i;
	       }
	    }
	    
	    $missingTypes = array_diff($typesExpected,$typesPresent);
	    return $missingTypes;
	}
	
	
	/**
	 * Determine which core page types have pages that are missing or in the trash
	 * 
	 * @return stdClass object with members 'typesMissingPages' and 'pagesInTrash'. typesMissingPages is an array of core page types, and pagesInTrash is an array of row objects represent the core page table rows linked to the trashed pages
	 */
	public function findMissingCorePages()
	{
	    global $wpdb;
	    
	    $sql = "SELECT cp.*, p.ID as post_id, p.post_name, p.post_status FROM ".MM_TABLE_CORE_PAGES." cp LEFT JOIN {$wpdb->posts} p ON (cp.page_id = p.ID) ".
	   	    "LEFT JOIN ".MM_TABLE_CORE_PAGE_TYPES." cpt ON (cp.core_page_type_id = cpt.id) ".
	   	    "WHERE ((cp.ref_type IS NULL) OR (cp.ref_type = '')) AND ((cp.ref_id IS NULL) OR (cp.ref_id = '')) ORDER BY cp.core_page_type_id ASC";
	    
	    $results = $wpdb->get_results($sql);
	    $pageTypesInTable = [];
	    $pagesInTrash = [];
	    $corePagesMissingPosts = []; //to clarify, this array will hold mm core page definitions where an entry exists in mm_core_pages but there is no linked wp_posts page/post, or the linked page/post doesn't exist
	    $postidString = _mmt("post id");
	    $corepageidString = _mmt("core page id");
	    foreach ($results as $row)
	    {
	        $pageTypesInTable[] = $row->core_page_type_id;
	        if ($row->post_status == 'trash')
	        {
	            $pagesInTrash[$row->post_id] = $row->id;
	        }
	        else if (($row->post_id == null) && ($row->core_page_type_id != MM_CorePageType::$FREE_CONFIRMATION)) // (free confirmation) is optional
	        {
	            $corePagesMissingPosts[$row->id] = $row->id; 
	        }
	    }
	    
	    //check to make sure each type has a page
	    $missingPageEntries = [];
	    foreach (range(1,13) as $type_id)
	    {
	        // there is no core page with type ID equal to 8 so ignore this
	        if (($type_id != 8) && !in_array($type_id,$pageTypesInTable))
	        {
	            $missingPageEntries[] = $type_id;
	        }
	    }
	    
	    $returnVal = new stdClass();
	    $returnVal->typesMissingPages = $missingPageEntries;
	    $returnVal->pagesInTrash = $pagesInTrash;
	    $returnVal->corePagesMissingPosts = $corePagesMissingPosts;
	    return $returnVal;
	}
	
	
	
	
}
