/**
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 *
 */
class MM_TransactionLog 
{
	public static $TRANSACTION_TYPE_CHARGE           	  = "1";
	public static $TRANSACTION_TYPE_PAYMENT           	  = "2";
	public static $TRANSACTION_TYPE_RECURRING_CHARGE  	  = "3";
	public static $TRANSACTION_TYPE_RECURRING_PAYMENT 	  = "4";
	public static $TRANSACTION_TYPE_REFUND            	  = "5";
	public static $TRANSACTION_TYPE_CREDIT           	  = "6";
	public static $TRANSACTION_TYPE_CHARGEBACK            = "7";
	
	/**
	 * Create an entry in the transactions table
	 * 
	 * An order id must be supplied
	 * An order item id must be supplied for transactions of type $TRANSACTION_TYPE_REBILL, because only an item can recur
	 * 
	 * @param int $orderId The id for the order being referenced. Required
	 * @param int $orderItemId The id for an order item being referenced
	 * @param float $amount The dollar amount of the transaction
	 * @param string $currencyCode The 3-char iso currency code of the currency this transaction took place in
	 * @param String $description A description of the transaction
	 * @param int $transactionType The type of the transaction, one of the constants in MM_TransactionLog
	 * @param boolean $balance If true, a matching transaction with a negative balance will be entered in the transactions table, so that the table will sum correctly
	 * @param int $paymentServiceId The payment service used to process this transaction
	 * @param int $paymentServiceDetailId The id of the entry in the payment-service-specific table providing more details for this transaction
	 * @param string $transactionDate The date to associate this transaction with. A datetime recognizable by strtotime is expected. If null, the current date/time is used. If integer, it is assumed to be a unix timestamp and converted to string
	 * @param int $refundId In the case of refunds, the id of the original transaction that was refunded
	 * 
	 * @return MM_Response containing the id of the created transaction on success, or a descriptive error message on failure
	 * 
	 */
	public static function createTransactionEntry($orderId, $orderItemId=null, $amount=null, $currencyCode=null, $description=null, $transactionType=null, $balance=false, $paymentServiceId=null, $paymentServiceDetailId=null, $transactionDate=null, $refundId=null, $isTest=false)
	{
		global $wpdb;
		
		if (is_null($orderId)) //transactions must be tied to at least an order
		{ 
			return new MM_Response("Attempted to create a transaction with null order id",MM_Response::$ERROR);
		}
		
		if (is_null($amount) || is_null($currencyCode) || is_null($description) || is_null($transactionType)) //transactions must be tied to at least an order
		{
		    return new MM_Response("Attempted to create a transaction without supplying either an amount, currency code, description, or transaction type",MM_Response::$ERROR);
		}
		
		if (!is_null($transactionDate)) //make sure any supplied dates are in mysql format, ints are assumed to already be timestamps
		{
			if (!is_int($transactionDate)) 
			{
				$transactionDate = strtotime($transactionDate);
			}
			$transactionDate = date("Y-m-d H:i:s",$transactionDate); 
		}
 
		//do transaction type-specific operations below, such as balancing the transaction
		switch ($transactionType)
		{
			case MM_TransactionLog::$TRANSACTION_TYPE_CHARGE:
				$amount = abs($amount);
				break;
			case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
				$amount = -(abs($amount));
				break;
			case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
			case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_CHARGE:
				//correct the sign, if necessary, making payments negative and charges positive
				$amount = abs($amount);
				$amount = ($transactionType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT)?(-$amount):$amount;
				if (is_null($orderItemId))
				{
					return new MM_Response("Attempted to create a rebill transaction with null order item id",MM_Response::$ERROR);
				}
				if ($balance) 
				{
					$rebillBalanceDescription = ($transactionType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_CHARGE)?"Rebill payment":"Rebill charge"; 
					$rebillBalanceTransactionType = ($transactionType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_CHARGE)?MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_CHARGE;
					$balanceResult = MM_TransactionLog::createTransactionEntry($orderId, $orderItemId, -$amount, $currencyCode, $rebillBalanceDescription, $rebillBalanceTransactionType,false,null,null,$transactionDate,null,$isTest);
					if (MM_Response::isError($balanceResult))
					{
						return new MM_Response("Error creating rebill transaction for order item # {$orderItemId}",MM_Response::$ERROR);
					}
				}
				break;
			case MM_TransactionLog::$TRANSACTION_TYPE_REFUND: 
				$amount = -(abs($amount)); //force refunds to be expressed as negative values. A "positive refund" is a credit, which is currently unsupported   
				break;
			case MM_TransactionLog::$TRANSACTION_TYPE_CHARGEBACK:
				break;
			default:
				return new MM_Response("Attempted to create transaction with unknown transaction type",MM_Response::$ERROR);
				break;		
		}
		
		$currencyCode = strtoupper($currencyCode);
		if (!MM_CurrencyUtil::isSupportedCurrency($currencyCode))
		{	
			$currencyCode = "USD";	
		}
		
		$insertData = array(
			'order_id' => $orderId,
			'order_item_id' => $orderItemId,
			'amount' => $amount,
			'currency' => $currencyCode,
			'description' => $description,
			'payment_service_id' => $paymentServiceId,
			'payment_service_detail_id' => $paymentServiceDetailId,
			'transaction_type' => $transactionType,
			'transaction_date'			=> (is_null($transactionDate))?MM_Utils::getCurrentTime():$transactionDate,
			'is_test'					=> (bool)$isTest
		);
		
		if (!is_null($refundId))
		{
			$insertData['refund_id'] = $refundId;
		}
		
		$res = $wpdb->insert(MM_TABLE_TRANSACTION_LOG, $insertData);
		if ($res == false)
		{
			return new MM_Response("Database error creating entry into transactions log",MM_Response::$ERROR);
		}
		
		$transactionId = $wpdb->insert_id;
		
		// dispatch push notifications
		if($transactionType == MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT ||
			$transactionType == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT ||
			$transactionType == MM_TransactionLog::$TRANSACTION_TYPE_REFUND)
		{
			$memberId = MM_Order::getUserIdByOrderId($orderId);
			
			if($memberId > 0)
			{
				switch ($transactionType)
				{
					case MM_TransactionLog::$TRANSACTION_TYPE_PAYMENT:
						do_action(MM_Event::$PAYMENT_RECEIVED, MM_Event::packageOrderData($memberId, $orderId, $orderItemId, $transactionId));	
						break;
						
					case MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT:
						do_action(MM_Event::$PAYMENT_REBILL, MM_Event::packageOrderData($memberId, $orderId, $orderItemId, $transactionId, true));
						break;
						
					case MM_TransactionLog::$TRANSACTION_TYPE_REFUND:
						$result = self::getTransactionInfo($refundId);
						$isRebill = false;
						if(MM_Response::isSuccess($result) && $result->message->transaction_type == MM_TransactionLog::$TRANSACTION_TYPE_RECURRING_PAYMENT)
						{
							$isRebill = true;
						}
						do_action(MM_Event::$REFUND_ISSUED, MM_Event::packageOrderData($memberId, $orderId, $orderItemId, $refundId, $isRebill));
						break;
				}
			}
		}
		
		return new MM_Response($transactionId);
	}
	
	
	/**
	 * createTestTransactionEntry is a convenience method which prevents callers from having to fill out all of the defaulted parameters in order to access $isTest at the end of the list
	 * 
	 * @see createTransactionEntry
	 * @return MM_Response
	 */
	public static function createTestTransactionEntry($orderId, $orderItemId=null, $amount=null, $currencyCode=null, $description=null, $transactionType=null, $balance=false, $paymentServiceId=null, $paymentServiceDetailId=null, $transactionDate=null, $refundId=null)
	{
	    if (is_null($amount) || is_null($currencyCode) || is_null($description) || is_null($transactionType)) //transactions must be tied to at least an order
	    {
	        return new MM_Response("Attempted to create a transaction without supplying either an amount, currency code, description, or transaction type",MM_Response::$ERROR);
	    }
		return self::createTransactionEntry($orderId, $orderItemId, $amount, $currencyCode, $description, $transactionType, $balance, $paymentServiceId, $paymentServiceDetailId, $transactionDate, $refundId, true);
	}
	

	public static function getTotalRecurringTransactionCountForItem($orderItemId)
	{
		global $wpdb;
		
		if (empty($orderItemId))
		{
			return new MM_Response("orderItem Id was invalid or not supplied",MM_Response::$ERROR);
		}
		
		$sql = "SELECT count(*) as total from ".MM_TABLE_TRANSACTION_LOG." where transaction_type = '".self::$TRANSACTION_TYPE_RECURRING_PAYMENT."' and order_item_id = %s and refund_id IS NULL";
		$transactionInfo = $wpdb->get_row($wpdb->prepare($sql,$orderItemId));
		
		return $transactionInfo->total;
	}
	

	public static function getLastPayment($orderItemId)
	{
		global $wpdb;
		
		if (empty($orderItemId))
		{
			return new MM_Response("orderItem Id was invalid or not supplied",MM_Response::$ERROR);
		}
		
		$sql = "SELECT * from ".MM_TABLE_TRANSACTION_LOG." where order_item_id = %s and refund_id IS NULL order by transaction_date desc limit 1";
		$transactionInfo = $wpdb->get_row($wpdb->prepare($sql,$orderItemId));
		
		return $transactionInfo;
	}

	
	/**
	 * Returns an object containing info about a specific transaction. Essentially a passthrough for wpdb->get_row
	 * 
	 * @param integer $transactionId The MemberMouse transaction id to lookup
	 * 
	 * @return MM_Response containing an object of type stdClass (which in turn contains the transaction information) on success, a descriptive error message on failure
	 */
	public static function getTransactionInfo($transactionId)
	{
		global $wpdb;
		
		if (empty($transactionId))
		{
			return new MM_Response("Transaction Id was invalid or not supplied",MM_Response::$ERROR);
		}
		
		$sql = "SELECT * from ".MM_TABLE_TRANSACTION_LOG." where id = %s";
		$transactionInfo = $wpdb->get_row($wpdb->prepare($sql,$transactionId));
		
		if ($transactionInfo === false)
		{
			return new MM_Response("Error looking up transaction",MM_Response::$ERROR);
		}
		
		return new MM_Response($transactionInfo);		
	}
}

