/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_CorePageType extends MM_Entity
{	
	public static $NO_PAGE = 0;
	public static $MEMBER_HOME_PAGE = 1;
	public static $SAVETHESALE = 2;
	public static $ERROR = 3;
	public static $LOGIN_PAGE = 4;
	public static $FORGOT_PASSWORD = 5;
	public static $CHECKOUT = 6;
	public static $PAID_CONFIRMATION = 7;
	public static $FREE_CONFIRMATION = 9;
	public static $MY_ACCOUNT = 10;
	public static $LOGOUT_PAGE = 11;
	public static $REDEEM_GIFT = 12;
	public static $RESET_PASSWORD = 13;
	
	private $name;
	private $visible;
	
	public function getData() 
	{	
		//do nothing
	}
	
	public static function getCorePageTypesList()
 	{
 		global $wpdb;
 		
 		$list = array();
 		
 		$sql = "select * from ".MM_TABLE_CORE_PAGE_TYPES." where visible='1'";
 		$rows = $wpdb->get_results($sql);
 		
 		if($rows)
 		{
	 		foreach($rows as $row)
			{	
				$list[$row->id] = $row->name;
			}
 		}	
 		return $list;
 	}
 	
 	public static function getCorePageName($typeId)
 	{
 		global $wpdb;
 		$sql = "select name from ".MM_TABLE_CORE_PAGE_TYPES." where id = {$typeId}";
 		$row = $wpdb->get_row($sql);
 			
 		if($row)
 		{
 			return $row->name;
 		}
 		
 		// backup method for looking up core page name. this is added for use in scenarios where
 		// the core page types table is corrupted
 		switch($typeId)
 		{
 		    case MM_CorePageType::$MEMBER_HOME_PAGE:
 		        return _mmt("Member Home");
 		        
 		    case MM_CorePageType::$SAVETHESALE:
 		        return _mmt("Save the Sale");
 		        
 		    case MM_CorePageType::$ERROR:
 		        return _mmt("Error");
 		        
 		    case MM_CorePageType::$FORGOT_PASSWORD:
 		        return _mmt("Forgot Password");
 		        
 		    case MM_CorePageType::$RESET_PASSWORD:
 		        return _mmt("Reset Password");
 		        
 		    case MM_CorePageType::$CHECKOUT:
 		        return _mmt("Checkout");
 		        
 		    case MM_CorePageType::$REDEEM_GIFT:
 		        return _mmt("Redeem Gift");
 		        
 		    case MM_CorePageType::$PAID_CONFIRMATION:
 		        return _mmt("Confirmation");
 		        
 		    case MM_CorePageType::$FREE_CONFIRMATION:
 		        return _mmt("Free Confirmation");
 		        
 		    case MM_CorePageType::$MY_ACCOUNT:
 		        return _mmt("My Account");
 		        
 		    case MM_CorePageType::$LOGIN_PAGE:
 		        return _mmt("Login");
 		        
 		    case MM_CorePageType::$LOGOUT_PAGE:
 		        return _mmt("Logout");
 		}
 		
 		return "";
 	}
 	
	public function setData($data)
	{
		try
		{
			$this->name = $data->name;
			$this->visible = $data->visible;
			parent::validate();
		}
		catch (Exception $ex) {
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		// do nothing
	}
	
	public function getName()
	{
		return $this->name;
	}
 	
	public function getVisible()
	{
		return $this->visible;
	}
	
}
