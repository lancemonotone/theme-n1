/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_CouponLogView extends MM_RBACGeneralEmployeeView
{
	public function __construct()
	{
		parent::__construct();
	}
	
	public static $MM_JSACTION_SEARCH = "search";
	
	public function performAction($post) 
	{	
		$response = parent::performAction($post);
		
		if(!($response instanceof MM_Response))
		{
			switch($post[self::$MM_JSACTION]) 
			{
				case self::$MM_JSACTION_SEARCH:
					return $this->generateDataGrid($post);
					
				default:
					return new MM_Response($response);
			}
		}
		else 
		{
			return $response;
		}
	}
	
	public function generateDataGrid($post=null)
	{
		return MM_TEMPLATE::generate(MM_MODULES."/coupon_log.datagrid.php", $post);
	}
	
	public function getViewData($post, MM_DataGrid $dg)
	{
	   global $wpdb;
	   $whereClause = array();
	   
	   array_push($whereClause, "c.is_gift = '0'");
	   
	   if(!empty($post["coupon_code"]))
       {
           $couponCodeSql = $wpdb->prepare("(c.coupon_code = '%s')", trim($post["coupon_code"]));
           array_push($whereClause, $couponCodeSql);
       }
       
       if(!empty($post["member_id"]))
       {
           $memberIdSql = $wpdb->prepare("(o.user_id = '%s')", trim($post["member_id"]));
           array_push($whereClause, $memberIdSql);
       }
		
	   if(!empty($post["from_date"]))
	   {
	      $fromDate = MM_Utils::dateToUTC($post['from_date'],"Y-m-d","00:00:00");
	      $fromDateSQl = $wpdb->prepare("(o.date_added >= '%s')", $fromDate);
	      array_push($whereClause, $fromDateSQl);
		
		  if(!empty($post["to_date"]))
		  {	  
		     $toDate = MM_Utils::dateToUTC($post['to_date'],"Y-m-d","23:59:59");
		     $toDateSQl = $wpdb->prepare("(o.date_added <= '%s')", $toDate);
		     array_push($whereClause, $toDateSQl);
		  }
	   }
	   
	   //tables used in the master query. Placing the constants into variables allows them to be embedded into the string, aiding in readability
	   $couponsTable = MM_TABLE_COUPONS;
	   $couponUsageTable = MM_TABLE_COUPON_USAGE;
	   $ordersTable = MM_TABLE_ORDERS;
	   $orderItemsTable = MM_TABLE_ORDER_ITEMS;
	   
	   $fromWhereSQL = "FROM {$couponUsageTable} cu INNER JOIN {$orderItemsTable} oi on (cu.product_order_item_id = oi.id) ".
	   	   "INNER JOIN {$ordersTable} o on (oi.order_id = o.id) INNER JOIN {$couponsTable} c on (cu.coupon_id = c.id) ";
	       
	   $fromWhereSQL .= (count($whereClause) > 0) ? " WHERE ".join(" AND ", $whereClause) : "";
	   
	   $countQuery = "select count(*) as total {$fromWhereSQL}";
	   $countResult = $wpdb->get_row($countQuery);
	   
	   $masterQuery = "SELECT {$countResult->total} as 'total', o.billing_first_name, o.billing_last_name, o.order_number, o.user_id, o.date_added, c.coupon_code {$fromWhereSQL}";
	   
	   if(!is_null($dg))
	   {
	       if(!is_null($dg->sortBy) && !empty($dg->sortBy)) //handle the sorting
    	   {
    	       $masterQuery.= " ORDER BY {$dg->sortBy} {$dg->sortDir}";
    	   }
	   
	       $masterQuery.= " ".$dg->getLimitSql(); //for pagination
	   }
	   
	   $results = $wpdb->get_results($masterQuery);
	   return $results;
	}
}
