/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_EmailServiceProvider extends MM_Entity
{	
	
	private $name="";
	private $token="";
	private $username="";
	private $password="";
	private $apiKey="";
	private $prospectListID="";
	private $cancellationListID="";
	private $configOptions = array();
	private $isActiveProvider = false;
	
	protected static $DEFAULT_TOKEN = "default";
	
	/**
	 * getData()
	 * Retrieve an Email Service Provider entity from the db. 
	 * Requires that the token or the id be set on the object 
	 */
	public function getData() 
	{
		global $wpdb;
		
		if (!empty($this->token)) 
		{
			$sql = "SELECT * FROM ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." WHERE provider_token='".$this->token."';";
		}
		else 
		{
			$sql = "SELECT * FROM ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." WHERE id='".$this->id."';";
		}
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$this->setData($result);
		}
		else 
		{
			parent::invalidate();
		}
	}
	
	/**
	 * Returns the active Email Service Provider
	 */
	public static function getActiveEmailServiceProvider()
	{
		global $wpdb;
		
		$sql = "SELECT * FROM ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." WHERE active='1' LIMIT 1";
		$result = $wpdb->get_row($sql);
		
		$provider_entity = new MM_EmailServiceProvider();
		
		if($result) {
			$provider_entity->setData($result);
		}
		else {
			$provider_entity->invalidate();
		}
		return $provider_entity;
	}
	
	/**
	 * 
	 * Sets the entity fields based on the content of $data
	 * @param object $data
	 */
	public function setData($data)
	{
		try 
		{
			$this->id = $data->id;
			$this->name = $data->provider_name;
			$this->token = $data->provider_token;
			$this->username = $data->username;
			$this->password = MM_MemberMouseService::decryptPassword($data->password);
			$this->apiKey = $data->api_key;
			$this->setConfig($data->additional_data); 
			$this->isActiveProvider = ($data->active == 1)?true:false;
			$this->prospectListID = $data->prospect_list_id;
			$this->cancellationListID = $data->cancellation_list_id;
						
			parent::validate();
		}
		catch (Exception $ex) {
			parent::invalidate();
		}
	}
	
	/**
	 * 
	 * Accepts a serialized array and uses it to set the configOptions configuration array on the entity
	 * @param string $serialized_config
	 */
	private function setConfig($serialized_config) 
	{
	    if (!empty($serialized_config))
	    {
		  $unserialized_config = unserialize($serialized_config);
		  $this->configOptions = (is_array($unserialized_config))?$unserialized_config:array();
	    }
	    else 
	    {
	        $this->configOptions = array();
	    }
	}
	
	/**
	 * Serializes the configOptions array and returns the serialized string
	 */
	private function getConfig() 
	{
		return serialize($this->configOptions);
	}
	
	/**
	 * Commits the values stored in the entity to the db
	 */
	public function commitData()
	{
		global $wpdb;
		
		$doUpdate = isset($this->id) && $this->id != "" && intval($this->id) > 0;
		
		MM_Transaction::begin();
		try
		{	
			
			if(!$doUpdate) 
			{
				$sql = "insert into ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." set " .
			 			"	provider_name = '%s'," .
			 			"	provider_token='%s'," .
			 			"	username='%s'," .
			 			"	password='%s'," .
			 			"	api_key='%s'," .
			 			"	additional_data='%s'," .
			 			"	active='%d'," .
			 			"   prospect_list_id='%s',".
			 			"   cancellation_list_id='%s'".
			 			"";
			}
		 	else 
		 	{
				$sql = "update ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." set " .
			 			"	provider_name = '%s'," .
			 			"	provider_token='%s'," .
			 			"	username='%s'," .
			 			"	password='%s'," .
			 			"	api_key='%s'," .
			 			"	additional_data='%s'," .
			 			"	active='%d'," .
			 			"   prospect_list_id='%s',".
			 			"   cancellation_list_id='%s' where id='{$this->id}'" .
			 			"";
		 	}
			
		 	$preparedSql = $wpdb->prepare($sql, $this->name, $this->token, $this->username, MM_MemberMouseService::encryptPassword($this->password), $this->apiKey, 
		 										$this->getConfig(), (($this->isActiveProvider == true)?1:0), $this->prospectListID, $this->cancellationListID);
		 	$result = $wpdb->query($preparedSql);
		 	
		 	if($result === false)
		 	{
		 		MM_Transaction::rollback();
		 		return new MM_Response("ERROR: unable to create email service provider (".$preparedSql.")", MM_Response::$ERROR);
		 	}
		 	
		 	if($this->isActiveProvider){
		 		$this->deactivateOtherProviders();
		 	}
		 	
		 	if(!$doUpdate) {
		 		$this->id = $wpdb->insert_id;
		 	}
		}
		catch(Exception $ex)
		{	
		 	MM_Transaction::rollback();
	 		return new MM_Response("ERROR: unable to create email service provider", MM_Response::$ERROR);
		}
		
		MM_Transaction::commit();
	
		return new MM_Response();
	}
	
	private function deactivateOtherProviders(){
		global $wpdb;
		
		$sql = "update ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." set active='0' where id!='{$this->id}'";
		$wpdb->query($sql);
	}
	
	/**
	 * Deletes the row having an id matching that stored in the entity, as long as it is not the default email service provider
	 */
	public function delete()
	{	
		global $wpdb;
		
		if(!$this->token != self::$DEFAULT_TOKEN)
		{
			$sql = "DELETE FROM ".MM_TABLE_EMAIL_SERVICE_PROVIDERS." WHERE id='%d' and provider_token != '%s' LIMIT 1";
			$results = $wpdb->query($wpdb->prepare($sql, $this->id,self::$DEFAULT_TOKEN));
			
			if($results) {
				return true;
			}
		}
		
		return false;
	}
	
	/**
	 * returns an array of all the email service providers names in the db, keyed by the token
	 */
	public static function getEmailServiceProvidersList()
	{
		global $wpdb;
 		
 		$providers = array();
 		
 		$sql = "SELECT * FROM ".MM_TABLE_EMAIL_SERVICE_PROVIDERS;
 		
 		$rows = $wpdb->get_results($sql);
 		
 		if($rows===false)
 		{
 			return $providers;
 		}
 		if($rows) 
 		{
	 		foreach($rows as $row)
			{
				$providers[$row->provider_token] = $row->provider_name;
			}
 		}
 		
 		return $providers;
	}
	
	/**
	 * Set the Email Service Provider Name
	 * @param string $str
	 */
	
	public function setName($str) 
	{
		$this->name = $str;
	}
	
	/**
	 * 
	 * Get the Email Service Provider Name
	 */
	public function getName()
	{
		return $this->name;
	}
	
	/**
	 * 
	 * Set the Email Service Provider Token
	 * @param string $str
	 */
	public function setToken($str) 
	{
		$this->token = $str;
	}
	
	/**
	 * 
	 * Get the Email Service Provider Token
	 */
	public function getToken()
	{
		return $this->token;
	}
	
	/**
	 * 
	 * Set the Email Service Provider username
	 * @param string $str
	 */
    public function setUsername($str) 
	{
		$this->username = $str;
	}
	
	/**
	 * 
	 * Get the Email Service Provider Username
	 */
	public function getUsername()
	{
		return $this->username;
	}
	
	/**
	 * 
	 * Set the Email Service Provider Password
	 * @param string $str
	 */
	public function setPassword($str) 
	{
		$this->password = $str;
	}
	
	/**
	 * 
	 * Get the Email Service Provider Password
	 */
	public function getPassword()
	{
		return $this->password;
	}
	
	/**
	 * 
	 * Set the Email Service Provider Api Key
	 * @param string $str
	 */
    public function setAPIKey($str) 
	{
		$this->apiKey = $str;
	}
	
	/**
	 * 
	 * Get the Email Service Provider Api Key
	 */
	public function getAPIKey()
	{
		return $this->apiKey;
	}
	
	/**
	 * 
	 * Set a configuration option for the Email Service Provider. Note: to remove an option, use deleteConfigOption
	 * @param string $key
	 * @param string $value
	 */
	public function setConfigOption($key,$value) 
	{
		$this->configOptions[$key] = $value;
	}
	
	/**
	 * 
	 * Get a configuration option for the Email Service Provider
	 * @param string $key
	 */
	public function getConfigOption($key) 
	{
		return (isset($this->configOptions[$key]))?$this->configOptions[$key]:"";
	}
	
	/**
	 *
	 * Remove a configuration option from the Email Service Provider
	 * @param string $key
	 */
	public function deleteConfigOption($key)
	{
		if (isset($this->configOptions[$key]))
		{
			unset($this->configOptions[$key]);
		}
	}
	
	/**
	 * 
	 * Set whether this Email Service Provider is the active provider or not
	 * @param boolean $state
	 */
	public function setActive($state=true) 
	{
		$this->isActiveProvider = $state;
	}
	
	/**
	 * 
	 * Return whether or not this Email Service Provider is the active provider or not
	 * @return boolean true is this is the active provider, false otherwise
	 */
	public function isActive() 
	{
		return $this->isActiveProvider;
	}
	
	/**
	 * 
	 * Set the prospect-list id
	 * @param string $prospectListID The list-id for the prospect list
	 */
	public function setProspectListID($prospectListID)
	{
		$this->prospectListID = $prospectListID;
	}
	
	/**
	 * 
	 * Retrieve the prospect-list id
	 * @return string the prospect-list id
	 */
	public function getProspectListID() 
	{
		return $this->prospectListID;
	}
	
	/**
	 * Set the cancellation-list id
	 * @param string $cancellationListID The list-id for the cancellation list
	 */
	public function setCancellationListID($cancellationListID)
	{
		$this->cancellationListID = $cancellationListID;
	}
	
	/**
	 * 
	 * Retrieve the cancellation-list id
	 * @return string the cancellation-list id
	 */
	public function getCancellationListID()
	{
		return $this->cancellationListID;
	}
}
